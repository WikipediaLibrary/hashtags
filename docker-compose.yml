---
volumes:
  mysql:
services:
  migrate:
    build:
      context: .
      target: django
    command: ["python", "manage.py", "migrate"]
    working_dir: /app
    restart: on-failure
    cpus: 0.25
    env_file:
      - '.env'
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - type: bind
        source: ./
        target: /app
  collectstatic:
    build:
      context: .
      target: django
    command: ["python", "manage.py", "collectstatic", "--noinput"]
    working_dir: /app
    restart: on-failure
    cpus: 0.25
    env_file:
      - '.env'
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - type: bind
        source: ./
        target: /app
  app:
    build:
      context: .
      target: app
    env_file:
      - '.env'
    depends_on:
      - collectstatic
      - migrate
    ports:
      - "8000:8000"
    command: ["gunicorn", "hashtagsv2.wsgi:application"]
    working_dir: /app
    restart: unless-stopped
    cpus: 0.5
    mem_limit: 1G
    volumes:
      - type: bind
        source: ./
        target: /app
  crons:
    build:
      context: .
      target: cron
    env_file:
      - ".env"
    depends_on:
      - db
    command: ["/app/crons/cron.sh"]
    volumes:
      - type: bind
        source: ./
        target: /app
      - type: bind
        source: ${HOST_BACKUP_DIR}
        target: /app/backup
    deploy:
      resources:
        reservations:
          cpus: "0.25"
          memory: "384M"
  scripts:
    build:
      context: .
      target: scripts
    command: ["python", "collect_hashtags.py"]
    restart: unless-stopped
    cpus: 0.25
    mem_limit: 64M
    env_file:
      - '.env'
    cap_add:
      - SYS_PTRACE
    depends_on:
      - migrate
    volumes:
      - type: bind
        source: ./scripts
        target: /scripts
      - type: bind
        source: ./wait_for_db.py
        target: /scripts/wait_for_db.py
  db:
    image: quay.io/wikipedialibrary/mariadb:10-updated
    env_file:
      - '.env'
    restart: unless-stopped
    cpus: 1
    mem_limit: 2G
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - type: volume
        source: mysql
        target: /var/lib/mysql
        volume: {}
      - type: bind
        source: ./db.cnf
        target: /etc/mysql/conf.d/db.cnf
  nginx:
    image: quay.io/wikipedialibrary/nginx:latest-updated
    restart: unless-stopped
    mem_limit: 32M
    volumes:
      - type: volume
        target: /var/lib/nginx/cache
      - type: bind
        source: ./nginx.conf
        target: /etc/nginx/conf.d/default.conf
      - type: bind
        source: ./robots.txt
        target: /app/robots.txt
      - type: bind
        source: ./static
        target: /app/static
    ports:
      - "80:80"
    depends_on:
      - app
